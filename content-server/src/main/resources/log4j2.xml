<?xml version="1.0" encoding="UTF-8"?>

<!--
 日志说明：

（1）请根据实际情况配置各项参数

（2）需要注意日志文件备份数和日志文件大小，注意预留目录空间

（3）实际部署的时候backupFilePatch变量需要修改成linux目录

 -->

<configuration status="error">

    <Properties>
        <Property name="fileName">content-server.log</Property>
    </Properties>

    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="trace" onMatch="ACCEPT" onMismatch="DENY" />
            <!--这个都知道是输出日志的格式-->
            <PatternLayout pattern="%msg%xEx%n" />
        </Console>

        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="MetricsRollingFile" fileName="${env:C_LOG_PATH}/${env:POD_NAME}/metrics-${fileName}"
                     filePattern="${env:C_LOG_PATH}/${env:POD_NAME}/metrics-%d{yyyyMMdd-HHmmssSSS}-${fileName}">
            <PatternLayout
                    pattern="%d{yyyy-MM-dd HH:mm:ss.SSS z} %-5level %class{36} %L %M - %msg%xEx%n" />
            <!-- 日志文件大小 -->
            <SizeBasedTriggeringPolicy size="20MB" />
            <!-- 最多保留文件数 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>

        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="ServicesRollingFile" fileName="${env:C_LOG_PATH}/${env:POD_NAME}/services-${fileName}"
                     filePattern="${env:C_LOG_PATH}/${env:POD_NAME}/services-%d{yyyyMMdd-HHmmssSSS}-${fileName}">
            <PatternLayout
                    pattern="%d{yyyy-MM-dd HH:mm:ss.SSS z} %-5level %class{36} %L %M - %msg%xEx%n" />
            <!-- 日志文件大小 -->
            <SizeBasedTriggeringPolicy size="20MB" />
            <!-- 最多保留文件数 -->
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
    </appenders>



    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--<Logger name="cn.ss23485.wsep.metrics.fetcher" level="info" additivity="true">-->
        <!--    <AppenderRef ref="MetricsRollingFile" />-->
        <!--    &lt;!&ndash;<AppenderRef ref="Console" />&ndash;&gt;-->
        <!--</Logger>-->
        <!--建立一个logger，此logger监听name对应的包名下的日志输出，level表示日志级别-->
        <Logger name="com.ss23485" level="info" additivity="true">
            <!--<AppenderRef ref="Console" />-->
            <AppenderRef ref="MetricsRollingFile" />
        </Logger>

        <!--建立一个默认的root的logger-->
        <Root level="error" additivity="true">
            <!-- 在root中关联appender才会在对应的位置输出日志，定义一个输出到文件的appender也必须关联到此处才会保存日志到文件 -->
            <!--<AppenderRef ref="Console" />-->
            <!--<AppenderRef ref="RollingFile" />-->
        </Root>

    </loggers>

</configuration>